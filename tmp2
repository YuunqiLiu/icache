

# 深度和宽度的范围
depths = [32 * (2 ** i) for i in range(8)]  # 32, 64, 128, 256, 512, 1024, 2048, 4096
widths = [32 * (2 ** i) for i in range(5)]  # 32, 64, 128, 256, 512

# 创建 req_list
req_list = []

# 生成不同深度和宽度的配置并添加到 req_list
for depth in depths:
    for width in widths:
        req_config = {
            "req_depth": depth,
            "req_width": width,
            "req_name": f"{depth}x{width}"
        }
        req = Memgen(req_config)
        req_list.append(req)

# 打印结果查看
for req in req_list:
    print(req)




req_config["req_depth"] = 4096
req_config["req_width"] =32
req_config["req_name"] = 4096x32ram
req_config["inf_type"] = "1p"
req_config["mem_type"] = "ram"

req = MemgenRequest(req_config)
req_list=[req]


# 深度的范围
depths = [64, 128, 256, 512, 1024, 2048]

# 其他固定配置
width = 32
inf_type = "1p"
mem_type = "ram"

# 创建 req_list
req_list = []

# 生成不同深度的配置并添加到 req_list
for depth in depths:
    req_config = {
        "req_depth": depth,
        "req_width": width,
        "req_name": f"{depth}x{width}ram",
        "inf_type": inf_type,
        "mem_type": mem_type
    }
    req = MemgenRequest(req_config)
    req_list.append(req)

# 打印结果查看
for req in req_list:
    print(req)






depths = [64, 128, 256, 512, 1024, 2048]


usr_option = "example_option"


req_list = []

usr_option = xxxx

depths = [32*(2**i) for i in range(8)]
req_list = []

for depth in depths:
    req_config["design_name"] = "test"
    req_config["req_depth"] = {depth}
    req_config["req_width"] = 32
    req_config["req_name"] = f"{depth}x{32}ram"
    req_config["inf_type"] = "1p"
    req_config["mem_type"] = "ram"
    req_config["usr_option"] = usr_option

    req = MemgenRequest(req_config)
    req_list.append(req)


for req in req_list:
    print(req)
import math

# 示例用户选项
usr_option = "example_option"

# 深度的范围
depths = [32 * (2 ** i) for i in range(8)]  # 32, 64, 128, 256, 512, 1024, 2048, 4096

# 创建 req_list
req_list = []

for depth in depths:
    req_config = {}  # 每次循环初始化一个新的字典

    req_config["design_name"] = "test"
    req_config["req_depth"] = depth  # 使用变量 depth 而不是字面量
    req_config["req_width"] = 32
    req_config["req_name"] = f"{depth}x32ram"
    req_config["inf_type"] = "1p"
    req_config["mem_type"] = "ram"
    req_config["usr_option"] = usr_option

    req = MemgenRequest(req_config)
    req_list.append(req)

for req in req_list:
    print(req)




import math

# 示例用户选项
usr_option = "example_option"

# 深度的范围
depths_32 = [32 * (2 ** i) for i in range(8)]  # 32, 64, 128, 256, 512, 1024, 2048, 4096
depths_64 = [64 * (2 ** i) for i in range(6)]  # 64, 128, 256, 512, 1024, 2048

# 创建 req_list
req_list = []

# 位宽为32的配置
for depth in depths_32:
    req_config = {}  # 每次循环初始化一个新的字典

    req_config["design_name"] = "test"
    req_config["req_depth"] = depth  # 使用变量 depth 而不是字面量
    req_config["req_width"] = 32
    req_config["req_name"] = f"{depth}x32ram"
    req_config["inf_type"] = "1p"
    req_config["mem_type"] = "ram"
    req_config["usr_option"] = usr_option

    req = MemgenRequest(req_config)
    req_list.append(req)


for depth in depths_64:
    req_config = {}

    req_config["design_name"] = "test"
    req_config["req_depth"] = depth 
    req_config["req_width"] = 64
    req_config["req_name"] = f"{depth}x64ram"
    req_config["inf_type"] = "1p"
    req_config["mem_type"] = "ram"
    req_config["usr_option"] = usr_option

    req = MemgenRequest(req_config)
    req_list.append(req)


for req in req_list:
    print(req)



output [7:0]dataOut, 
output [15:0]memAddr, 
output memWrite, memRead, 
input validMemData,
input[7:0] dataIn, 
input [22:0] byteAddr, 
input validBit, 
input WE, 
rst, 
clk);